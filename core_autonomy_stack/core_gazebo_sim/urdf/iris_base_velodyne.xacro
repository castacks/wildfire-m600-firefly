<?xml version="1.0"?>


<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Macro to insert a 2D scanning LIDAR with ROS integration.
    name: Name of the link associated to the sensor.
    topic: ROS topic name where the laser scan is published.
    samples: number of samples during scan.
    update_rate: frequency to publish output, hz.
    min_angle: the horizontal angle that the scan begins at.
    max_angle: the angle that the scan ends at.
    min_range: minimum distance for an object to be detected by laser.
    max_range: maximum distance for an object to be detected by laser.
    robot_namespace: The robot namespace.
    mesh: The laser mesh.
    noise_stddev: Standard deviation of gaussian noise applied to output.
  -->
  <xacro:macro name="planar_lidar"
               params="name:=laser
                       update_rate:=40
                       samples:=720
                       min_angle:=-2.35619
                       max_angle:=2.35619
                       min_range:=0.04
                       max_range:=30.0                       
                       noise_stddev:=0.01
                       robot_namespace:=/
                       topic:=scan
                       mesh:=package://subt_sensors/meshes/hokuyo.dae">
    <link name="${name}">
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
      <!--
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="${mesh}" />
        </geometry>
	</visual>
	-->
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.1 0.1 0.1"/>
        </geometry>
      </collision>
    </link>

    <gazebo reference="${name}">
      <turnGravityOff>false</turnGravityOff>
      <sensor type="gpu_ray" name="${name}">
        <update_rate>${update_rate}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples}</samples>
              <resolution>1</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>${min_range}</min>
            <max>${max_range}</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </ray>
       <plugin name="gazebo_ros_planar_lidar" filename="libgazebo_ros_gpu_laser.so">
          <topicName>${topic}</topicName>
          <frameName>${name}</frameName>
          <robotNamespace></robotNamespace>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

  
  <!-- Properties that can be assigned at build time as arguments.
  Is there a reason not to make all properties arguments?
  -->
  <xacro:arg name='name' default='iris' />
  <xacro:arg name='mavlink_addr' default='INADDR_ANY' />
  <xacro:arg name='mavlink_udp_port' default='14560' />
  <xacro:arg name='mavlink_tcp_port' default='4560' />
  <xacro:arg name='serial_enabled' default='false' />
  <xacro:arg name='serial_device' default='/dev/ttyACM0' />
  <xacro:arg name='baudrate' default='921600' />
  <xacro:arg name='qgc_addr' default='INADDR_ANY' />
  <xacro:arg name='qgc_udp_port' default='14550' />
  <xacro:arg name='sdk_addr' default='INADDR_ANY' />
  <xacro:arg name='sdk_udp_port' default='14540' />
  <xacro:arg name='hil_mode' default='false' />
  <xacro:arg name='hil_state_level' default='false' />
  <xacro:arg name='send_vision_estimation' default='false' />
  <xacro:arg name='send_odometry' default='false' />
  <xacro:arg name='enable_lockstep' default='true' />
  <xacro:arg name='use_tcp' default='true' />
  <xacro:arg name='vehicle_is_tailsitter' default='false' />
  <xacro:arg name='visual_material' default='DarkGrey' />
  <xacro:arg name='enable_mavlink_interface' default='true' />
  <xacro:arg name='enable_wind' default='false' />
  <!-- The following causes segfault with multiple vehicles if defaults to true!!! -->
  <xacro:arg name='enable_ground_truth' default='false' />
  <xacro:arg name='enable_logging' default='false' />
  <xacro:arg name='log_file' default='iris' />

  <!-- macros for gazebo plugins, sensors -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/component_snippets.xacro" />

  <!-- Instantiate iris "mechanics" -->
  <xacro:include filename="$(arg rotors_description_dir)/urdf/iris.xacro" />

  <xacro:if value="$(arg enable_wind)">
    <xacro:wind_plugin_macro
        namespace="${namespace}"
        wind_direction="0 0 1"
        wind_force_mean="0.7"
        xyz_offset="1 0 0"
        wind_gust_direction="0 0 0"
        wind_gust_duration="0"
        wind_gust_start="0"
        wind_gust_force_mean="0"
        />
  </xacro:if>

  <!-- Ground truth odometry sensor -->
  <gazebo>
    <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
      <alwaysOn>true</alwaysOn>
      <updateRate>200.0</updateRate>
      <bodyName>base_link</bodyName> <!-- This is the link for which ground truth data will be published. It is also used as the child_frame_id in the odometry message, which is not the correct thing to do because the linear and angular velocity are actually in the world frame, not the 'bodyName' frame. The core_odometry_transform packge will handle this by publishing a new odometry message with the frame_id and child_frame_id corrected.  -->
      <topicName>ground_truth/state</topicName>
      <gaussianNoise>0.0</gaussianNoise>
      <frameName>world</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>
  
  <!-- Add upward and downward lasers -->
  <planar_lidar name="laser_up" topic="laser_up" min_angle="0" max_angle="0.01" samples="10" />
  <joint name="laser_up_mount_joint" type="fixed">
    <origin xyz="0.25 0 0" rpy="0 -1.57 0" />
    <parent link="base_link" />
    <child link="laser_up" />
  </joint>

  <planar_lidar name="laser_down" topic="laser_down" min_angle="0" max_angle="0.01" samples="10" />
  <joint name="laser_down_mount_joint" type="fixed">
    <origin xyz="0.25 0 0" rpy="0 1.57 0" />
    <parent link="base_link" />
    <child link="laser_down" />
  </joint>

  <!-- Add a velodyne -->
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <VLP-16 parent="base_link" topic="velodyne_points" hz="10" samples="440" gpu="false" min_range="0.9" mass="0.0">
    <origin xyz="0 0 0.1" rpy="0 0 0" />
  </VLP-16>
  

  <!-- Add an rgbd camera -->
  <xacro:include filename="$(find core_gazebo_sim)/urdf/rgbd_camera.urdf.xacro"/>
  <rgbd_camera name="rgbd_camera" parent="base_link">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </rgbd_camera>

  <!-- Add a stereo camera -->
  <xacro:include filename="$(find core_gazebo_sim)/urdf/stereo_camera.urdf.xacro"/>
  <stereo_camera frame_name="front_stereo" parent="base_link">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
  </stereo_camera>
  
  <!-- Instantiate gps plugin. -->
  <xacro:gps_plugin_macro
    namespace="${namespace}"
    gps_noise="true"
    >
  </xacro:gps_plugin_macro>

  <!-- Instantiate magnetometer plugin. -->
  <xacro:magnetometer_plugin_macro
    namespace="${namespace}"
    pub_rate="20"
    noise_density="0.0004"
    random_walk="0.0000064"
    bias_correlation_time="600"
    mag_topic="/mag"
    >
  </xacro:magnetometer_plugin_macro>

  <!-- Instantiate barometer plugin. -->
  <xacro:barometer_plugin_macro
    namespace="${namespace}"
    pub_rate="10"
    baro_topic="/baro"
    >
  </xacro:barometer_plugin_macro>

  <xacro:if value="$(arg enable_mavlink_interface)">
  <!-- Instantiate mavlink telemetry interface. -->
  <xacro:mavlink_interface_macro
    namespace="${namespace}"
    imu_sub_topic="/imu"
    gps_sub_topic="/gps"
    mag_sub_topic="/mag"
    baro_sub_topic="/baro"
    mavlink_addr="$(arg mavlink_addr)"
    mavlink_udp_port="$(arg mavlink_udp_port)"
    mavlink_tcp_port="$(arg mavlink_tcp_port)"
    serial_enabled="$(arg serial_enabled)"
    serial_device="$(arg serial_device)"
    baudrate="$(arg baudrate)"
    qgc_addr="$(arg qgc_addr)"
    qgc_udp_port="$(arg qgc_udp_port)"
    sdk_addr="$(arg sdk_addr)"
    sdk_udp_port="$(arg sdk_udp_port)"
    hil_mode="$(arg hil_mode)"
    hil_state_level="$(arg hil_state_level)"
    vehicle_is_tailsitter="$(arg vehicle_is_tailsitter)"
    send_vision_estimation="$(arg send_vision_estimation)"
    send_odometry="$(arg send_odometry)"
    enable_lockstep="$(arg enable_lockstep)"
    use_tcp="$(arg use_tcp)"
    >
  </xacro:mavlink_interface_macro>
  </xacro:if>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:imu_plugin_macro
    namespace="${namespace}"
    imu_suffix=""
    parent_link="base_link"
    imu_topic="/imu"
    mass_imu_sensor="0.015"
    gyroscope_noise_density="0.0003394"
    gyroscopoe_random_walk="0.000038785"
    gyroscope_bias_correlation_time="1000.0"
    gyroscope_turn_on_bias_sigma="0.0087"
    accelerometer_noise_density="0.004"
    accelerometer_random_walk="0.006"
    accelerometer_bias_correlation_time="300.0"
    accelerometer_turn_on_bias_sigma="0.1960"
  >
    <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:imu_plugin_macro>

  <xacro:if value="$(arg enable_ground_truth)">
    <!-- Mount an IMU providing ground truth. -->
    <xacro:imu_plugin_macro
      namespace="${namespace}"
      imu_suffix="gt"
      parent_link="base_link"
      imu_topic="ground_truth/imu"
      mass_imu_sensor="0.00001"
      gyroscope_noise_density="0.0"
      gyroscopoe_random_walk="0.0"
      gyroscope_bias_correlation_time="1000.0"
      gyroscope_turn_on_bias_sigma="0.0"
      accelerometer_noise_density="0.0"
      accelerometer_random_walk="0.0"
      accelerometer_bias_correlation_time="300.0"
      accelerometer_turn_on_bias_sigma="0.0"
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" />
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:imu_plugin_macro>

    <!-- Mount a generic odometry sensor providing ground truth. -->
    <xacro:odometry_plugin_macro
      namespace="${namespace}/ground_truth"
      odometry_sensor_suffix="gt"
      parent_link="base_link"
      pose_topic="pose"
      pose_with_covariance_topic="pose_with_covariance"
      position_topic="position"
      transform_topic="transform"
      odometry_topic="odometry"
      parent_frame_id="world"
      mass_odometry_sensor="0.00001"
      measurement_divisor="1"
      measurement_delay="0"
      unknown_delay="0.0"
      noise_normal_position="0 0 0"
      noise_normal_quaternion="0 0 0"
      noise_normal_linear_velocity="0 0 0"
      noise_normal_angular_velocity="0 0 0"
      noise_uniform_position="0 0 0"
      noise_uniform_quaternion="0 0 0"
      noise_uniform_linear_velocity="0 0 0"
      noise_uniform_angular_velocity="0 0 0"
      enable_odometry_map="false"
      odometry_map=""
      image_scale=""
    >
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] [kg.m^2] -->
      <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
    </xacro:odometry_plugin_macro>
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}"
    >
    </xacro:bag_plugin_macro>
  </xacro:if>

</robot>
